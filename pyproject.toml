[tool.black]
line-length = 99
target-version = ["py38", "py39", "py310", "py311"]
exclude = '''
/(
    \.git|.venv
)/
'''

[tool.isort]
profile = "black"
float_to_top = true
skip_glob = ".venv"

[tool.poetry]
name = "tech_debt_hotspot"
version = "0.1.0"
description = "Identifies hotspots for tech debt"
repository = "https://github.com/expobrain/tech_debt_hotspot"
authors = ["Daniele Esposti <daniele.esposti@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.8.1,<3.12"
radon = "^6.0.1"
click = "^8.1.7"
sh = "^2.0.7"
pydantic = "^2.8.2"

[tool.poetry.group.dev.dependencies]
mypy = "^1.2"
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
pytest-clarity = "^1.0.1"
pytest-testmon = "^2.0.6"
pytest-timeout = "^2.1.0"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
exclude = ".venv/"
check_untyped_defs = true
disallow_incomplete_defs = true
warn_unused_configs = true
warn_unused_ignores = true
disallow_subclassing_any = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_return_any = true

[[tool.mypy.overrides]]
module = ["radon", "radon.metrics", "sh"]
ignore_missing_imports = true

[tool.pytest.ini_options]
timeout = 10

[tool.poetry.scripts]
tech_debt_hotspot = "tech_debt_hotspot:main"
